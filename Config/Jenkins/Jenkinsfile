pipeline {
    agent any

    environment {
        PATH = "D:\\chromedriver-win64\\chromedriver-win64;%PATH%;C:\\Users\\STEL\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: '6314ed17-e1f7-4c32-a229-25fbc493a2dc', url: 'https://github.com/thanhlamha/Stel.git'
            }
        }

        stage('Run tests') {
            steps {
                script {
                    // Get the selected test cases
                    def selectedTestCases = params.TAGS.split(',')
                    def includeOptions = selectedTestCases.collect { "--include ${it}" }.join(' ')
                    def excludeOptions = "--exclude BLOCK-* --exclude FixAT"
                    def robotCommand = "robot --outputdir results ${includeOptions} ${excludeOptions} tests\\"
                    echo "Running command: ${robotCommand}"
                    bat robotCommand
                }
            }
        }

        stage('Cleanup') {
            steps {
                echo 'Cleaning up after tests'
            }
        }
    }

    post {
        success {
            echo 'Tests passed - deployment can proceed'
        }

        failure {
            echo 'Tests failed - deployment halted'
        }

        always {
            echo 'Pipeline completed'
        }
    }
}
